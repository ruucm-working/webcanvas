{"code":"var core_1 = require('@angular/core');\r\nvar router_1 = require('@angular/router');\r\nvar AuthGuard = (function () {\r\n    function AuthGuard(router) {\r\n        this.router = router;\r\n    }\r\n    AuthGuard.prototype.canActivate = function (route, state) {\r\n        if (localStorage.getItem('currentUser')) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    };\r\n    AuthGuard = __decorate([\r\n        core_1.Injectable(), \r\n        __metadata('design:paramtypes', [Object])\r\n    ], AuthGuard);\r\n    return AuthGuard;\r\n}());\r\nexports.AuthGuard = AuthGuard;\r\n//# sourceMappingURL=auth.guard.js.map","sourceMap":{"version":3,"file":"auth.guard.js","sourceRoot":"","sources":["client/imports/app/_guards/auth.guard.ts"],"names":[],"mappings":"AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,uBAAiF,iBAAiB,CAAC,CAAA;AAGnG;IAEI,mBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACtC,2BAA2B;YAC3B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,8DAA8D;QAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,EAAE,EAAC,CAAC,CAAC;QAC3E,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAdL;QAAC,iBAAU,EAAE;;iBAAA;IAeb,gBAAC;AAAD,CAAC,AAdD,IAcC;AAdY,iBAAS,YAcrB,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n \n@Injectable()\nexport class AuthGuard implements CanActivate {\n \n    constructor(private router: Router) { }\n \n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (localStorage.getItem('currentUser')) {\n            // logged in so return true\n            return true;\n        }\n \n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}"]},"version":"1","isExternal":true,"references":{"files":[],"modules":[],"typings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2304,"fileName":"client/imports/app/_guards/auth.guard.ts","message":"Cannot find name 'CanActivate'.","line":5,"column":35},{"code":2304,"fileName":"client/imports/app/_guards/auth.guard.ts","message":"Cannot find name 'Router'.","line":7,"column":33},{"code":2304,"fileName":"client/imports/app/_guards/auth.guard.ts","message":"Cannot find name 'ActivatedRouteSnapshot'.","line":9,"column":24},{"code":2304,"fileName":"client/imports/app/_guards/auth.guard.ts","message":"Cannot find name 'RouterStateSnapshot'.","line":9,"column":55}]},"hash":"eb481aad976f9a55e2bcf0d1ec164f9b43bbb806"}