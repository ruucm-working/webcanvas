{"code":"var core_1 = require('@angular/core');\r\nvar router_1 = require('@angular/router');\r\nvar users_database_js_1 = require('../../../../imports/api/users-database.js');\r\nvar User = (function () {\r\n    function User(email, password) {\r\n        this.email = email;\r\n        this.password = password;\r\n    }\r\n    return User;\r\n}());\r\nexports.User = User;\r\nvar AuthenticationService = (function () {\r\n    function AuthenticationService(_router) {\r\n        this._router = _router;\r\n    }\r\n    AuthenticationService.prototype.route_test = function () {\r\n        this._router.navigate(['login']);\r\n    };\r\n    AuthenticationService.prototype.logout = function (navigateTo) {\r\n        localStorage.removeItem(\"user\");\r\n        if (navigateTo == 'home')\r\n            this._router.navigate(['home']);\r\n        else\r\n            this._router.navigate(['login']);\r\n    };\r\n    AuthenticationService.prototype.login = function (user) {\r\n        this.users = this.get_users();\r\n        var authenticatedUser = this.users.find(function (u) { return u.email === user.email; });\r\n        if (authenticatedUser && authenticatedUser.password === user.password) {\r\n            localStorage.setItem(\"user\", authenticatedUser);\r\n            this._router.navigate(['home']);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    AuthenticationService.prototype.hideToPublic = function () {\r\n        if (localStorage.getItem(\"user\") === null) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    AuthenticationService.prototype.checkCredentials = function () {\r\n        if (localStorage.getItem(\"user\") === null) {\r\n            this._router.navigate(['login']);\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    AuthenticationService.prototype.get_users = function () {\r\n        return users_database_js_1.UsersDatabase.find().map(function (messages) { return messages; });\r\n    };\r\n    AuthenticationService = __decorate([\r\n        core_1.Injectable(), \r\n        __metadata('design:paramtypes', [Object])\r\n    ], AuthenticationService);\r\n    return AuthenticationService;\r\n}());\r\nexports.AuthenticationService = AuthenticationService;\r\n//# sourceMappingURL=authentication.service.js.map","sourceMap":{"version":3,"file":"authentication.service.js","sourceRoot":"","sources":["client/imports/app/_simple_login/authentication.service.ts"],"names":[],"mappings":"AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,uBAAuB,iBAAiB,CAAC,CAAA;AACzC,kCAA8B,2CAA2C,CAAC,CAAA;AAG1E;IACE,cACS,KAAa,EACb,QAAgB;QADhB,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;IAAI,CAAC;IAChC,WAAC;AAAD,CAAC,AAJD,IAIC;AAJY,YAAI,OAIhB,CAAA;AAGD;IACC,+BACS,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IAAE,CAAC;IAC3B,0CAAU,GAAV;QACC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IACD,sCAAM,GAAN,UAAO,UAAU;QAChB,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAChC,EAAE,CAAC,CAAC,UAAU,IAAI,MAAM,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACjC,IAAI;YACH,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,qCAAK,GAAL,UAAM,IAAI;QACT,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC9B,IAAI,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,EAAtB,CAAsB,CAAC,CAAC;QACrE,EAAE,CAAC,CAAC,iBAAiB,IAAI,iBAAiB,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAA,CAAC;YACtE,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;YAChD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACd,CAAC;IAED,4CAAY,GAAZ;QACC,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAA,CAAC;YACzC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IAED,gDAAgB,GAAhB;QACC,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAA,CAAC;YACzC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IAED,yCAAS,GAAT;QACC,MAAM,CAAC,iCAAa,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,UAAC,QAAgB,IAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IA3CF;QAAC,iBAAU,EAAE;;6BAAA;IA4Cb,4BAAC;AAAD,CAAC,AA3CD,IA2CC;AA3CY,6BAAqB,wBA2CjC,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UsersDatabase } from '../../../../imports/api/users-database.js';\nimport { LoginComponent } from './login.component'\n\nexport class User {\n  constructor(\n    public email: string,\n    public password: string) { }\n}\n\n@Injectable()\nexport class AuthenticationService {\n\tconstructor(\n\t\tprivate _router: Router){}\n\troute_test() {\n\t\tthis._router.navigate(['login']);\n\t}\n\tlogout(navigateTo) {\n\t\tlocalStorage.removeItem(\"user\");\n\t\tif (navigateTo == 'home')\n\t\t\tthis._router.navigate(['home']);\n\t\telse\n\t\t\tthis._router.navigate(['login']);\n\t}\n\n\tlogin(user){\n\t\tthis.users = this.get_users();\n\t\tvar authenticatedUser = this.users.find(u => u.email === user.email);\n\t\tif (authenticatedUser && authenticatedUser.password === user.password){\n\t\t\tlocalStorage.setItem(\"user\", authenticatedUser);\n\t\t\tthis._router.navigate(['home']);      \n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\thideToPublic(){\n\t\tif (localStorage.getItem(\"user\") === null){\n\t\t  return false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tcheckCredentials(){\n\t\tif (localStorage.getItem(\"user\") === null){\n\t\t  this._router.navigate(['login']);\n\t\t  return false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tget_users(): User[] {\n\t\treturn UsersDatabase.find().map((messages: User[]) => { return messages; });\n\t}\n}\n"]},"version":"1","isExternal":true,"references":{"files":[],"modules":["client/imports/app/_simple_login/login.component.ts"],"typings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2304,"fileName":"client/imports/app/_simple_login/authentication.service.ts","message":"Cannot find name 'Router'.","line":15,"column":20},{"code":2339,"fileName":"client/imports/app/_simple_login/authentication.service.ts","message":"Property 'users' does not exist on type 'AuthenticationService'.","line":28,"column":8},{"code":2339,"fileName":"client/imports/app/_simple_login/authentication.service.ts","message":"Property 'users' does not exist on type 'AuthenticationService'.","line":29,"column":32}]},"hash":"7f499332711e3e6e05c6f5a8db000625792f37f2"}