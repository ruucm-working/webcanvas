{"code":"var core_1 = require('@angular/core');\r\nvar http_1 = require('@angular/http');\r\nrequire('rxjs/add/operator/map');\r\nvar AuthenticationService = (function () {\r\n    function AuthenticationService(http) {\r\n        this.http = http;\r\n    }\r\n    AuthenticationService.prototype.login = function (username, password) {\r\n        return this.http.post('/api/authenticate', JSON.stringify({ username: username, password: password }))\r\n            .map(function (response) {\r\n            // login successful if there's a jwt token in the response\r\n            var user = response.json();\r\n            if (user && user.token) {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n            }\r\n        });\r\n    };\r\n    AuthenticationService.prototype.logout = function () {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n    };\r\n    AuthenticationService = __decorate([\r\n        core_1.Injectable(), \r\n        __metadata('design:paramtypes', [Object])\r\n    ], AuthenticationService);\r\n    return AuthenticationService;\r\n}());\r\nexports.AuthenticationService = AuthenticationService;\r\n//# sourceMappingURL=authentication.service.js.map","sourceMap":{"version":3,"file":"authentication.service.js","sourceRoot":"","sources":["client/imports/app/_services/authentication.service.ts"],"names":[],"mappings":"AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAAwC,eAAe,CAAC,CAAA;AAExD,QAAO,uBAEP,CAAC,CAF6B;AAG9B;IACI,+BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAEnC,qCAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB;QACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;aACjG,GAAG,CAAC,UAAC,QAAkB;YACpB,0DAA0D;YAC1D,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC3B,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrB,kGAAkG;gBAClG,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAC9D,CAAC;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,sCAAM,GAAN;QACI,iDAAiD;QACjD,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;IAnBL;QAAC,iBAAU,EAAE;;6BAAA;IAoBb,4BAAC;AAAD,CAAC,AAnBD,IAmBC;AAnBY,6BAAqB,wBAmBjC,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map'\n \n@Injectable()\nexport class AuthenticationService {\n    constructor(private http: Http) { }\n \n    login(username: string, password: string) {\n        return this.http.post('/api/authenticate', JSON.stringify({ username: username, password: password }))\n            .map((response: Response) => {\n                // login successful if there's a jwt token in the response\n                let user = response.json();\n                if (user && user.token) {\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\n                    localStorage.setItem('currentUser', JSON.stringify(user));\n                }\n            });\n    }\n \n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n    }\n}"]},"version":"1","isExternal":true,"references":{"files":[],"modules":[],"typings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2304,"fileName":"client/imports/app/_services/authentication.service.ts","message":"Cannot find name 'Http'.","line":8,"column":31},{"code":2304,"fileName":"client/imports/app/_services/authentication.service.ts","message":"Cannot find name 'Response'.","line":12,"column":29}]},"hash":"285f2ce80d5b2f6ebc8bc87e834688b6d34e5eab"}